{"version":3,"sources":["reducers/films/filmsReducer.js","actions/films/messages.js","reducers/errorReducer.js","reducers/films/movieReducer.js","reducers/films/genreReducer.js","utils/actions.js","reducers/index.js","reducers/helperReducer.js","store.jsx","actions/films/commands.js","App.js","footer.js","Main.js","MainContainer.js","MovieContainer.js","utils/routes.js","serviceWorker.js","index.js"],"names":["filmsReducer","state","arguments","length","undefined","action","type","payload","errorReducer","movieReducer","genreReducer","genres","getMessageObject","rootReducer","combineReducers","movies","error","movie","helper","sortBy","genre","Object","objectSpread","configureStore","createStore","applyMiddleware","thunkMiddleware","url","Commands","getFilms","page","dispatch","axios","get","concat","then","response","data","catch","message","getFilmById","filmId","searchFilms","query","getGenres","connect","changeSort","changeSortBy","updateGenre","changeGenre","getMovies","props","useEffect","react_default","a","createElement","Navbar","color","NavbarBrand","Nav","NavItem","Form","inline","className","FormGroup","Label","for","Input","name","id","onChange","e","value","target","selectedOptions","map","key","Footer","elem","document","querySelector","style","backgroundImage","backgroundAttachment","position","bottom","results","Container","Row","Col","sm","react_router_dom","to","src","poster_path","alt","title","Button","disabled","onClick","total_pages","hasResultsProperty","prototype","hasOwnProperty","call","src_Main","getMovie","movieId","imageWidth","params","match","test","navigator","userAgent","imageURL","backdrop_path","store","Routes","es","src_App","react_router","exact","path","render","src_MainContainer","component","Movie","footer","Boolean","window","location","hostname","ReactDOM","routes","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"mQAUeA,EARM,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACb,ICJqB,YDKnB,OAAOD,EAAOE,QAChB,QAAS,OAAON,IEILO,EARM,WAAwB,IAAvBP,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACb,IDDsB,aCEpB,OAAOD,EAAOE,QAChB,QAAS,OAAON,ICILQ,EARM,WAAwB,IAAvBR,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACb,IFH0B,iBEIxB,OAAOD,EAAOE,QAChB,QAAS,OAAON,ICILS,EARM,WAAwB,IAAvBT,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACb,IHFsB,aGGpB,OAAOD,EAAOE,QAAQI,OACxB,QAAS,OAAOV,YCDLW,EALU,SAACP,EAAQE,GAAT,MAAsB,CAC7CD,KAAMD,EACNE,YCaaM,EARKC,YAAgB,CAClCC,OAAQf,EACRgB,MAAOR,EACPS,MAAOR,EACPS,OCNa,WAAgE,IAA/DjB,EAA+DC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvD,CAAEiB,OAAQ,kBAAmBC,MAAO,MAAQf,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7E,OAAQC,EAAOC,MACb,IALa,WAKE,OAAOe,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBkB,OAAQd,EAAOE,UACjD,IALc,YAKE,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBmB,MAAOf,EAAOE,UACjD,QAAS,OAAON,IDGlBU,OAAQD,IEGKa,EAVQ,WAOrB,OANcC,YACZX,EACAY,YACEC,gGCHAC,EAAM,+BAyCGC,EAvCE,CACfC,SAAU,eAAClB,EAADT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAU,KAAMiB,EAAhBjB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAyB,kBAAmB4B,EAA5C5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAmD,EAAnD,OAAyD,SAAC6B,GAClEC,IAAMC,IAAN,GAAAC,OAAaP,EAAb,qEAAAO,OAAoFf,EAApF,kDAAAe,OAA2IJ,GAA3II,OAAmJvB,EAAD,gBAAAuB,OAA+BvB,GAArB,KACzJwB,KAAK,SAACC,GACLL,EAASnB,ERZQ,YQYoBwB,EAASC,SAC7CC,MAAM,SAACtB,GACRe,EAASnB,ERXS,aQWoBI,EAAMuB,cAIlDC,YAAa,SAAAC,GAAM,OAAI,SAACV,GACtBC,IAAMC,IAAN,GAAAC,OAAaP,EAAb,WAAAO,OAA0BO,EAA1B,6DACGN,KAAK,SAACC,GACLL,EAASnB,ERpBa,iBQoBoBwB,EAASC,SAClDC,MAAM,SAACtB,GACRe,EAASnB,ERpBS,aQoBoBI,EAAMuB,cAIlDG,YAAa,SAAAC,GAAK,OAAI,SAACZ,GACrBC,IAAMC,IAAN,GAAAC,OAAaP,EAAb,gFAAAO,OAA+FS,EAA/F,gCACGR,KAAK,SAACC,GACLL,EAASnB,ER7Ba,iBQ6BoBwB,EAASC,SAClDC,MAAM,SAACtB,GACRe,EAASnB,ER7BS,aQ6BoBI,EAAMuB,cAIlDK,UAAW,kBAAM,SAACb,GAChBC,IAAMC,IAAN,GAAAC,OAAaP,EAAb,8EACGQ,KAAK,SAACC,GACLL,EAASnB,ERrCS,aQqCoBwB,EAASC,SAC9CC,MAAM,SAACtB,GACRe,EAASnB,ERtCS,aQsCoBI,EAAMuB,eCqCpD,IAYeM,cAZE,SAAC5C,GAEhB,MAAO,CAAEiB,OADkBjB,EAAnBiB,OACSP,OADUV,EAAXU,SAIE,SAAAoB,GAAQ,MAAK,CAC/Be,WAAY,SAAC3B,GAAaY,EHvEA,SAAAZ,GAAM,OAAI,SAACY,GAAeA,EAASnB,EAX9C,WAWyEO,KGuErD4B,CAAa5B,KAChD6B,YAAa,SAAC5B,GAAYW,EHvED,SAAAX,GAAK,OAAI,SAACW,GAAeA,EAASnB,EAX3C,YAWuEQ,KGuEpD6B,CAAY7B,KAC/CwB,UAAW,WAAQb,EAASH,EAASgB,cACrCM,UAAW,SAACvC,EAAQQ,EAAQW,GAAWC,EAASH,EAASC,SAASlB,EAAQQ,EAAQW,OAGrEe,CAhFf,SAAaM,GAAO,IAEhBL,EACEK,EADFL,WAAY5B,EACViC,EADUjC,OAAQ8B,EAClBG,EADkBH,YAAarC,EAC/BwC,EAD+BxC,OAAQiC,EACvCO,EADuCP,UAAWM,EAClDC,EADkDD,UAetD,OAbAE,oBAAU,WACRR,KACC,IAYDS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,QACZJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,qBACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,QAAM,EAACC,UAAU,cAErBV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,IAAI,QAAX,UACAb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAO7D,KAAK,SAAS8D,KAAK,SAASC,GAAG,gBAAgBC,SAAU,SAAAC,GAAC,OAd3DC,EAcwED,EAAEE,OAAOC,gBAAgB,GAAGL,GAbpHrB,EAAYwB,QACZtB,EAAUsB,EAAOtD,EAAOC,QAFT,IAACqD,IAeH7D,EAAOgE,IAAI,SAAAvD,GAAK,OAAIiC,EAAAC,EAAAC,cAAA,UAAQc,GAAIjD,EAAMiD,GAAIO,IAAKxD,EAAMiD,IAAKjD,EAAMgD,UAGrEf,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,IAAI,QAAX,SACAb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAO7D,KAAK,SAAS8D,KAAK,SAASC,GAAG,gBAAgBG,MAAOtD,EAAOC,OAAQmD,SAAU,SAAAC,GAAC,OAzB7EC,EAyB8FD,EAAEE,OAAOD,MAxB3H1B,EAAW0B,QACXtB,EAAUhC,EAAOE,MAAOoD,GAFL,IAACA,IA0BRnB,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,yCCtCDsB,MAbf,WACE,OACExB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,IAAI,UAAX,iFC+CV,IAKerB,cALE,SAAC5C,GAEhB,MAAO,CAAEiB,OADUjB,EAAXiB,SAIK2B,CAtDf,SAAcM,GAAO,IACXpC,EAA8BoC,EAA9BpC,OAAQmC,EAAsBC,EAAtBD,UAAWhC,EAAWiC,EAAXjC,OAErB4D,EAAOC,SAASC,cAAc,QAMpC,OAJAF,EAAKG,MAAMC,gBAAkB,8HAC7BJ,EAAKG,MAAME,qBAAuB,QAClCJ,SAASC,cAAc,UAAUC,MAAMG,SAAW,WAClDL,SAASC,cAAc,UAAUC,MAAMI,OAAS,MAE9ChC,EAAAC,EAAAC,cAAA,WACGxC,EAAOuE,QAAQX,IAAI,SAAA1D,GAAK,OACvBoC,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,kBAAkBa,IAAK3D,EAAMoD,IAC1ChB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAKC,GAAI,GACPrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,GAAE,UAAA1D,OAAYjB,EAAMoD,KAAMhB,EAAAC,EAAAC,cAAA,OAAKsC,IAAG,GAAA3D,OAdrC,mCAcqCA,OAAgBjB,EAAM6E,aAAeC,IAAI,aAEnF1C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAKC,GAAI,GACPrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,GAAE,UAAA1D,OAAYjB,EAAMoD,KAAMhB,EAAAC,EAAAC,cAAA,UAAKtC,EAAM+E,cAMrD3C,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAWxB,UAAU,eACnBV,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAKC,GAAI,EAAG3B,UAAU,iCACpBV,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAQC,SAA0B,IAAhBnF,EAAOe,KAAYqE,QAAS,kBAAMjD,EAAUhC,EAAOE,MAAOF,EAAOC,OAAQJ,EAAOe,KAAO,KAAIuB,EAAAC,EAAAC,cAAA,KAAGQ,UAAU,sBAA1H,IAAkJ,gBAAlJ,MAEFV,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAKC,GAAI,EAAG3B,UAAU,iCAAtB,gBACgBhD,EAAOe,KADvB,gBAC0Cf,EAAOqF,aAEjD/C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAKC,GAAI,EAAG3B,UAAU,iCACpBV,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAQC,SAAUnF,EAAOe,OAASf,EAAOqF,YAAaD,QAAS,kBAAMjD,EAAUhC,EAAOE,MAAOF,EAAOC,OAAQJ,EAAOe,KAAO,KAA1H,IAAgI,YAAhI,IAA6IuB,EAAAC,EAAAC,cAAA,KAAGQ,UAAU,8BCZtK,IASelB,cATE,SAAC5C,GAEhB,MAAO,CAAEc,OADyBd,EAA1Bc,OACSC,MADiBf,EAAlBe,MACQE,OADUjB,EAAXiB,SAIE,SAAAa,GAAQ,MAAK,CACtCmB,UAAW,SAACvC,EAAQQ,EAAQW,GAAWC,EAASH,EAASC,SAASlB,EAAQQ,EAAQW,OAGrEe,CAjCf,SAAuBM,GAAO,IAE1BpC,EACEoC,EADFpC,OAAQmC,EACNC,EADMD,UAAWhC,EACjBiC,EADiBjC,OAEfmF,EAAqBhF,OAAOiF,UAAUC,eAAeC,KAAKzF,EAAQ,WAMxE,OAJAqC,oBAAU,WACRF,EAAUhC,EAAOP,OAAQO,EAAOC,OAAQD,EAAOY,OAC9C,IAGDuB,EAAAC,EAAAC,cAAA,WAEG8C,GAAsBhD,EAAAC,EAAAC,cAACkD,EAAD,CAAM1F,OAAQA,EAAQmC,UAAWA,OCwB9D,IASeL,cATE,SAAC5C,GAEhB,MAAO,CAAEgB,MADShB,EAAVgB,QAIU,SAAAc,GAAQ,MAAK,CAC/B2E,SAAU,SAACC,GAAc5E,EAASH,EAASY,YAAYmE,OAG1C9D,CA9Cf,SAAeM,GAAO,IAKhByD,EAHF3F,EACEkC,EADFlC,MAAOyF,EACLvD,EADKuD,SAEDG,EADJ1D,EADe2D,MAEXD,OAIND,EADE,uGAAuGG,KAAKC,UAAUC,WAC3G,OAEA,OAGf,IAAMC,EAAQ,8BAAAhF,OAAiC0E,GAAjC1E,OAA8CjB,EAAM6E,aAOlE,OALAf,SAASC,cAAc,QAAQC,MAAMC,gBAArC,0CAAAhD,OAAiGjB,EAAMkG,cAAvG,KACApC,SAASC,cAAc,UAAUC,MAAMG,SAAW,WAClDL,SAASC,cAAc,UAAUC,MAAMI,OAAS,MAEhDjC,oBAAU,WAAQsD,EAASG,EAAOxC,KAAQ,KAEvCwC,EAAOxC,KAAOpD,EAAMoD,IACrBhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,mBACbV,EAAAC,EAAAC,cAAA,OAAKsC,IAAG,GAAA3D,OAAKgF,GAAYnB,IAAI,eClB/BqB,EAAQ7F,IAkBC8F,MAhBf,WACE,OACEhE,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAUF,MAAOA,GACf/D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgE,EAAD,MACAlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMtE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAU5B,GAAG,cACjDvC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAMtE,EAAAC,EAAAC,cAACqE,EAAD,CAAetH,KAAK,aAC7D+C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOE,KAAK,aAAaG,UAAWC,IACpCzE,EAAAC,EAAAC,cAACwE,EAAD,UCXUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCZNsB,IAAST,OAAOtE,EAAAC,EAAAC,cAAC8E,EAAD,MAAYtD,SAASuD,eAAe,SD2H9C,kBAAmBtB,WACrBA,UAAUuB,cAAcC,MAAMrG,KAAK,SAAAsG,GACjCA,EAAaC","file":"static/js/main.8db034f1.chunk.js","sourcesContent":["import { GET_FILMS } from '../../actions/films/messages';\r\n\r\nconst filmsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_FILMS:\r\n      return action.payload;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default filmsReducer;\r\n","export const GET_FILMS = 'GET_FILMS';\r\nexport const GET_FILM_BY_ID = 'GET_FILM_BY_ID';\r\nexport const GET_GENRES = 'GET_GENRES';\r\nexport const SHOW_ERROR = 'SHOW_ERROR';\r\nexport const SET_MOVIE = 'SET_MOVIE';\r\n","import { SHOW_ERROR } from '../actions/films/messages';\r\n\r\nconst errorReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case SHOW_ERROR:\r\n      return action.payload;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default errorReducer;\r\n","import { GET_FILM_BY_ID } from '../../actions/films/messages';\r\n\r\nconst movieReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_FILM_BY_ID:\r\n      return action.payload;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default movieReducer;\r\n","import { GET_GENRES } from '../../actions/films/messages';\r\n\r\nconst genreReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case GET_GENRES:\r\n      return action.payload.genres;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default genreReducer;\r\n","const getMessageObject = (action, payload) => ({\r\n  type: action,\r\n  payload,\r\n});\r\n\r\nexport default getMessageObject;\r\n","import { combineReducers } from 'redux';\r\nimport filmsReducer from './films/filmsReducer';\r\nimport errorReducer from './errorReducer';\r\nimport movieReducer from './films/movieReducer';\r\nimport genreReducer from './films/genreReducer';\r\nimport helperReducer from './helperReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  movies: filmsReducer,\r\n  error: errorReducer,\r\n  movie: movieReducer,\r\n  helper: helperReducer,\r\n  genres: genreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import getMessageObject from '../utils/actions';\r\n\r\nconst SET_SORT = 'SET_SORT';\r\nconst SET_GENRE = 'SET_GENRE';\r\n\r\nexport default (state = { sortBy: 'popularity.desc', genre: null }, action) => {\r\n  switch (action.type) {\r\n    case SET_SORT: return { ...state, sortBy: action.payload };\r\n    case SET_GENRE: return { ...state, genre: action.payload };\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport const changeSortBy = sortBy => (dispatch) => { dispatch(getMessageObject(SET_SORT, sortBy)); };\r\nexport const changeGenre = genre => (dispatch) => { dispatch(getMessageObject(SET_GENRE, genre)); };\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n      thunkMiddleware,\r\n    ),\r\n  );\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import axios from 'axios';\r\nimport {\r\n  GET_FILMS, GET_FILM_BY_ID, SHOW_ERROR, GET_GENRES,\r\n} from './messages';\r\nimport getMessageObject from '../../utils/actions';\r\n\r\nconst url = 'https://api.themoviedb.org/3';\r\n\r\nconst Commands = {\r\n  getFilms: (genres = null, sortBy = 'popularity.desc', page = 1) => (dispatch) => {\r\n    axios.get(`${url}/discover/movie?api_key=5874acfd11651a28c55771624f7021f4&sort_by=${sortBy}&include_adult=false&include_video=false&page=${page}${!genres ? '' : `&with_genres=${genres}`}`)\r\n      .then((response) => {\r\n        dispatch(getMessageObject(GET_FILMS, response.data));\r\n      }).catch((error) => {\r\n        dispatch(getMessageObject(SHOW_ERROR, error.message));\r\n      });\r\n  },\r\n\r\n  getFilmById: filmId => (dispatch) => {\r\n    axios.get(`${url}/movie/${filmId}?api_key=5874acfd11651a28c55771624f7021f4&language=en-US`)\r\n      .then((response) => {\r\n        dispatch(getMessageObject(GET_FILM_BY_ID, response.data));\r\n      }).catch((error) => {\r\n        dispatch(getMessageObject(SHOW_ERROR, error.message));\r\n      });\r\n  },\r\n\r\n  searchFilms: query => (dispatch) => {\r\n    axios.get(`${url}/search/multi?api_key=5874acfd11651a28c55771624f7021f4&language=en-US&query=${query}&page=1&include_adult=false`)\r\n      .then((response) => {\r\n        dispatch(getMessageObject(GET_FILM_BY_ID, response.data));\r\n      }).catch((error) => {\r\n        dispatch(getMessageObject(SHOW_ERROR, error.message));\r\n      });\r\n  },\r\n\r\n  getGenres: () => (dispatch) => {\r\n    axios.get(`${url}/genre/movie/list?api_key=5874acfd11651a28c55771624f7021f4&language=en-US`)\r\n      .then((response) => {\r\n        dispatch(getMessageObject(GET_GENRES, response.data));\r\n      }).catch((error) => {\r\n        dispatch(getMessageObject(SHOW_ERROR, error.message));\r\n      });\r\n  },\r\n\r\n};\r\n\r\nexport default Commands;\r\n","import PropType from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Row, Col, Container, Navbar, NavbarBrand, NavItem, Nav, NavLink, Form, FormGroup, Input, Label,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { changeSortBy, changeGenre } from './reducers/helperReducer';\r\nimport Commands from './actions/films/commands';\r\n\r\nfunction App(props) {\r\n  const {\r\n    changeSort, helper, updateGenre, genres, getGenres, getMovies,\r\n  } = props;\r\n  useEffect(() => {\r\n    getGenres();\r\n  }, []);\r\n  const updateSortBy = (value) => {\r\n    changeSort(value);\r\n    getMovies(helper.genre, value);\r\n  };\r\n\r\n  const setGenre = (value) => {\r\n    updateGenre(value);\r\n    getMovies(value, helper.sortBy);\r\n  };\r\n\r\n  return (\r\n    <Navbar color=\"dark\">\r\n      <NavbarBrand>The Movie DB</NavbarBrand>\r\n      <Nav>\r\n        <NavItem>\r\n          <Form inline className=\"nav-filter\">\r\n\r\n            <FormGroup>\r\n              <Label for=\"sort\">Genre:</Label>\r\n              <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={e => setGenre(e.target.selectedOptions[0].id)}>\r\n                {genres.map(genre => <option id={genre.id} key={genre.id}>{genre.name}</option>)}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"sort\">Sort:</Label>\r\n              <Input type=\"select\" name=\"select\" id=\"exampleSelect\" value={helper.sortBy} onChange={e => updateSortBy(e.target.value)}>\r\n                <option>popularity.asc</option>\r\n                <option>popularity.desc</option>\r\n                <option>release_date.asc</option>\r\n                <option>release_date.desc</option>\r\n                <option>revenue.asc</option>\r\n                <option>revenue.desc</option>\r\n                <option>primary_release_date.asc</option>\r\n                <option>primary_release_date.desc</option>\r\n                <option>original_title.asc</option>\r\n                <option>original_title.desc</option>\r\n                <option>vote_average.asc</option>\r\n                <option>vote_average.desc</option>\r\n                <option>vote_count.asc</option>\r\n                <option>vote_count.desc</option>\r\n              </Input>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n        </NavItem>\r\n      </Nav>\r\n\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  changeSort: PropType.func.isRequired,\r\n  helper: PropType.object.isRequired,\r\n  updateGenre: PropType.func.isRequired,\r\n  genres: PropType.array.isRequired,\r\n  getGenres: PropType.func.isRequired,\r\n  getMovies: PropType.func.isRequired,\r\n};\r\n\r\nconst mapState = (state) => {\r\n  const { helper, genres } = state;\r\n  return { helper, genres };\r\n};\r\n\r\nconst mapDispatch = dispatch => ({\r\n  changeSort: (sortBy) => { dispatch(changeSortBy(sortBy)); },\r\n  updateGenre: (genre) => { dispatch(changeGenre(genre)); },\r\n  getGenres: () => { dispatch(Commands.getGenres()); },\r\n  getMovies: (genres, sortBy, page) => { dispatch(Commands.getFilms(genres, sortBy, page)); },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(App);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Row, Col, Container, Navbar, NavbarBrand, NavItem, Nav, NavLink, Form, FormGroup, Label,\r\n} from 'reactstrap';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"footer\">Popovych Alex. Web developer(React-Redux)</Label>\r\n\r\n        </FormGroup>\r\n      </Form>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import PropType from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Container, Row, Col, Button,\r\n} from 'reactstrap';\r\n\r\nfunction Main(props) {\r\n  const { movies, getMovies, helper } = props;\r\n  const imageURL = 'https://image.tmdb.org/t/p/w154';\r\n  const elem = document.querySelector('body');\r\n\r\n  elem.style.backgroundImage = 'url(https://itsshowtimenj.files.wordpress.com/2013/10/abstractdesktop-astounding-wood-background-wallpaper-backgrounds.jpg)';\r\n  elem.style.backgroundAttachment = 'fixed';\r\n  document.querySelector('footer').style.position = 'relative';\r\n  document.querySelector('footer').style.bottom = '0px';\r\n  return (\r\n    <div>\r\n      {movies.results.map(movie => (\r\n        <div className=\"container-panel\" key={movie.id}>\r\n          <Container>\r\n            <Row>\r\n              <Col sm={3}>\r\n                <Link to={`/films/${movie.id}`}><img src={`${imageURL}${movie.poster_path}`} alt=\"poster\" /></Link>\r\n              </Col>\r\n              <Col sm={9}>\r\n                <Link to={`/films/${movie.id}`}><h4>{movie.title}</h4></Link>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      ))}\r\n      <Container className=\"paggination\">\r\n        <Row>\r\n          <Col sm={4} className=\"d-flex justify-content-center\">\r\n            <Button disabled={movies.page === 1} onClick={() => getMovies(helper.genre, helper.sortBy, movies.page - 1)}><i className=\"fas fa-arrow-left\" /> {'PREVIOUS PAGE'} </Button>\r\n          </Col>\r\n          <Col sm={4} className=\"d-flex justify-content-center\">\r\n            CURRENT PAGE {movies.page} TOTAL PAGES {movies.total_pages}\r\n          </Col>\r\n          <Col sm={4} className=\"d-flex justify-content-center\">\r\n            <Button disabled={movies.page === movies.total_pages} onClick={() => getMovies(helper.genre, helper.sortBy, movies.page + 1)}> {'NEXT PAGE'} <i className=\"fas fa-arrow-right\" /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  movies: PropType.object.isRequired,\r\n  getMovies: PropType.func.isRequired,\r\n  helper: PropType.object.isRequired,\r\n};\r\n\r\nconst mapProps = (state) => {\r\n  const { helper } = state;\r\n  return { helper };\r\n};\r\n\r\nexport default connect(mapProps)(Main);\r\n","import PropType from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Commands from './actions/films/commands';\r\nimport Main from './Main';\r\n\r\nfunction MainContainer(props) {\r\n  const {\r\n    movies, getMovies, helper,\r\n  } = props;\r\n  const hasResultsProperty = Object.prototype.hasOwnProperty.call(movies, 'results');\r\n\r\n  useEffect(() => {\r\n    getMovies(helper.genres, helper.sortBy, helper.page);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n\r\n      {hasResultsProperty && <Main movies={movies} getMovies={getMovies} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nMainContainer.propTypes = {\r\n  movies: PropType.object.isRequired,\r\n  getMovies: PropType.func.isRequired,\r\n  helper: PropType.object.isRequired,\r\n};\r\n\r\nconst mapState = (state) => {\r\n  const { movies, error, helper } = state;\r\n  return { movies, error, helper };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMovies: (genres, sortBy, page) => { dispatch(Commands.getFilms(genres, sortBy, page)); },\r\n});\r\n\r\nexport default connect(mapState, mapDispatchToProps)(MainContainer);\r\n","import PropType from 'prop-types';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Commands from './actions/films/commands';\r\n\r\nfunction Movie(props) {\r\n  const {\r\n    movie, getMovie, match,\r\n  } = props;\r\n  const { params } = match;\r\n  let imageWidth;\r\n  // eslint-disable-next-line no-undef\r\n  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) {\r\n    imageWidth = 'w154';\r\n  } else {\r\n    imageWidth = 'w342';\r\n  }\r\n\r\n  const imageURL = `https://image.tmdb.org/t/p/${imageWidth}${movie.poster_path}`;\r\n  //   const backgroundImageUrl = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\r\n  document.querySelector('body').style.backgroundImage = `url(https://image.tmdb.org/t/p/original${movie.backdrop_path})`;\r\n  document.querySelector('footer').style.position = 'absolute';\r\n  document.querySelector('footer').style.bottom = '0px';\r\n  \r\n  useEffect(() => { getMovie(params.id); }, []);\r\n  return (\r\n    +params.id === movie.id && (\r\n    <div>\r\n      <div className=\"container-panel\">\r\n        <img src={`${imageURL}`} alt=\"poster\" />\r\n      </div>\r\n    </div>\r\n    )\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  movie: PropType.object.isRequired,\r\n  getMovie: PropType.func.isRequired,\r\n  match: PropType.object.isRequired,\r\n};\r\n\r\nconst mapState = (state) => {\r\n  const { movie } = state;\r\n  return { movie };\r\n};\r\n\r\nconst mapDispatch = dispatch => ({\r\n  getMovie: (movieId) => { dispatch(Commands.getFilmById(movieId)); },\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Movie);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from '../store';\r\nimport App from '../App';\r\nimport Footer from '../footer';\r\nimport MainContainer from '../MainContainer';\r\nimport Movie from '../MovieContainer';\r\n\r\n// import Header from './App/Header';\r\n// import ScrollToTop from './sections/utils/scrollToTop';\r\n\r\nconst store = configureStore();\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <div>\r\n          <App />\r\n          <Route exact path=\"/\" render={() => <Redirect to=\"/films\" />} />\r\n          <Route exact path=\"/films\" render={() => <MainContainer type=\"movie\" />} />\r\n          <Route path=\"/films/:id\" component={Movie} />\r\n          <Footer />\r\n        </div>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Routes from './utils/routes';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Routes />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}